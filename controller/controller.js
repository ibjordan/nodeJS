const jwt = require('jsonwebtoken');

function makeid(length) {
  let result = '';
  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  const charactersLength = characters.length;
  let counter = 0;
  while (counter < length) {
    result += characters.charAt(Math.floor(Math.random() * charactersLength));
    counter += 1;
  }
  return result;
}


exports.index = (req, res, next) => {
    res.render('', {
    test: 'Please, enter your credentials',
    path: '/',
    });

  };


  exports.authenticated = (req, res, next) => {
    const username = req.body.username//here I'm retrieving the email that the user inserted on the login box and with the regex I'm validating that it is a valid email
    var regex = new RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/);
    if (!regex.test(username)) {
      return res.render('', {
        test: 'Credentials are not valid, please try again',
        path: '/',
        });
    } 
    const jtiID= makeid(15);




    //this JSON that is inside JSON.parse() is the secret key generated by Infobip, you should change it for your secret key
    const securityKey = JSON.parse('{"id":"014833f5-3d22-444d-b706-721943fb3aec","key":"1cI7SMFROHjGEIqIvuZl418rH92Vl5rvNEq/fSxIebc="}'); 
    const date = new Date();
    const timestamp = Math.floor(date.getTime()/1000);
    var payload = {
      alg: "HS256",
      jti: jtiID,
      stp: 'email', //this property means which contact information we are using to validate the enduser, it could be msisdn (phone number) or externalPersonId (any Id used on people in that field)
      sub: username, 
      iss: 'b33ccce1-ffcc-4778-9a69-86f19fa9a2f7', //the widget key/id that activates the live chat on the head tags on the html
      iat: timestamp,
      exp: timestamp + 15,
      ski: securityKey.id
    };
    var token = jwt.sign(payload, Buffer.from(securityKey.key, 'base64'));

    res.render('authenticated-user', {
    test: 'Login',
    token: token,
    path: '/',
    });

  };